#pragma once

// CPP
#include <stdint.h>

namespace EARS
{
	namespace Modules
	{
		// Indices for the event list in EARS::Modules::Player
		// The contents of the array are filled out at rumtime
		enum PlayerActionEvents : uint32_t
		{
			kEvent_Run = 0,
			kEvent_Crouch = 1,
			kEvent_Vault = 2,
			kEvent_QuickAttackA = 3,
			kEvent_QuickAttackB = 4,
			kEvent_LungeAttackLeft = 5,
			kEvent_LungeAttackRight = 6,
			kEvent_Block = 7,
			kEvent_BlockIdle = 8,
			kEvent_BlockDodgeLeft = 9,
			kEvent_BlockDodgeRight = 10,
			kEvent_BlockDodgeBack = 11,
			kEvent_Grab = 12,
			kEvent_GrabAlternate = 13,
			kEvent_GrabIdle = 14,
			kEvent_GrabRelease = 15,
			kEvent_GrabQuickAttackA = 16,
			kEvent_GrabQuickAttackB = 17,
			kEvent_GrabQuickAttackC = 18,
			kEvent_GrabChargeAttackStart = 19,
			kEvent_GrabChargeAttackHold = 20,
			kEvent_GrabChargeAttackFinish = 21,
			kEvent_GrabPullup = 22,
			kEvent_GrabPullup2 = 23,
			kEvent_GrabMoveForwardsRight = 24,
			kEvent_GrabMoveBackwardsRight = 25,
			kEvent_GrabMoveBackwardsLeft = 26,
			kEvent_GrabMoveForwardsLeft = 27,
			kEvent_GrabThrowLeft = 28,
			kEvent_GrabThrowRight = 29,
			kEvent_GrabStrangleA = 30,
			kEvent_GrabStrangleB = 31,
			kEvent_Garotte_Grab = 32,
			kEvent_Garotte_Idle = 33,
			kEvent_Garotte_Pullup = 34,
			kEvent_ExecuteAttack_Engage = 35,
			kEvent_SlamForward_Engage = 36,
			kEvent_SlamLeft_Engage = 37,
			kEvent_SlamRight_Engage = 38,
			kEvent_HoldThrow_Engage = 39,
			kEvent_HoldThrow_Disengage = 40,
			kEvent_HoldThrow_Hold = 41,
			kEvent_HoldThrow_Throw = 42,
			kEvent_F2FActivate = 43,
			kEvent_F2FUp = 44,
			kEvent_F2FDecisionDown = 45,
			kEvent_F2fDecisionLeft = 46,
			kEvent_F2FDecisionRight = 47,
			kEvent_NextF2FDebug = 48,
			kEvent_PrevF2FDebug = 49,
			kEvent_F2FDeactivate = 50,
			kEvent_Activate = 51,
			kEvent_ActivateHoldDown = 52,
			kEvent_Deactivate = 53,
			kEvent_DoorCSAActivate = 54,
			kEvent_UseItem = 55,
			kEvent_RevealItem = 56,
			kEvent_ConcealItem = 57,
			kEvent_NextItem = 58,
			kEvent_PreviousItem = 59,
			kEvent_TargetLock = 60,
			kEvent_CameraReset = 61,
			kEvent_CommitSuicide = 62,
			kEvent_Revive = 63,
			kEvent_WallWalk_Engage = 64,
			kEvent_NeckSnap = 65,
			kEvent_CrewAction = 66,
			kEvent_CrewReturn = 67,
			kEvent_CrewForceAction = 68,
			kEvent_CrewForceReturn = 69,
			kEvent_FlickTargetNext = 70,
			kEvent_FlickTargetLeft = 71,
			kEvent_FlickTargetRight = 72,
			kEvent_NumEvents = 73
		};

		// Indices for the vibration event list in EARS::Modules::Player
		// The contents of the array are filled out at rumtime
		enum PlayerVibrationEvents : uint32_t
		{
			kVib_hit_damage_light = 0,
			kVib_hit_damage_medium = 1,
			kVib_hit_damage_heavy = 2,
			kVib_hit_with_brass_knuckles = 3,
			kVib_hit_with_heavy_weapon = 4,
			kVib_hit_player_death = 5,
			kVib_hit_by_bullet = 6,
			kVib_hit_by_car = 7,
			kVib_ambient_car_crash = 8,
			kVib_ambient_explosion = 9,
			kVib_maneuvering_kick_open_door = 10,
			kVib_maneuvering_pedestrian_collide = 11,
			kVib_maneuvering_vaulted_landing = 12,
			kVib_maneuvering_run_into_wall = 13,
			kVib_melee_strangle = 14,
			kVib_melee_stunned = 15,
			kVib_melee_punch_left_heavy = 16,
			kVib_melee_punch_left_light = 17,
			kVib_melee_punch_right_heavy = 18,
			kVib_melee_punch_right_light = 19,
			kVib_melee_kick_left_heavy = 20,
			kVib_melee_kick_left_light = 21,
			kVib_melee_kick_right_heavy = 22,
			kVib_melee_kick_right_light = 23,
			kVib_melee_headbutt_heavy = 24,
			kVib_melee_headbutt_light = 25,
			kVib_melee_attachment_heavy = 26,
			kVib_melee_attachment_light = 27,
			kVib_shooting_shotgun = 28,
			kVib_shooting_tommy_gun = 29,
			kVib_vehicle_bail_out = 30,
			kVib_vehicle_car_crash = 31,
			kVib_vehicle_start_car = 32,
			kVib_vehicle_collision_damage = 33,
			kVib_vehicle_gunshot_damage = 34,
			kVib_vehicle_upshift_gear = 35,
			kVib_vehicle_low_rpm = 36,
			kVib_vehicle_medium_rpm = 37,
			kVib_vehicle_high_rpm = 38,
			kVib_vehicle_curb = 39,
			kVib_NumEvents = 40,
		};
	} // Modules
} // EARS
